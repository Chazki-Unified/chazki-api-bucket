---
openapi: 3.0.0
info:
  title: API Chazki
  description: |
    In order to place orders for Chazki's services, endpoints were enabled to record the delivery and check the orders status. These services are registered in the domain owned by chazki and are detailed in the section below.
    Find out more about [Chazki here](https://chazki.com/#/).
    See also our
  termsOfService: https://chazki.com/tyc.html
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://us-central1-chazki-link-dev.cloudfunctions.net
    description: Tonny Development
  - url: https://us-central1-chazki-link-beta.cloudfunctions.net
    description: Tonny Beta
  - url: https://us-central1-chazki-link.cloudfunctions.net
    description: Tonny Production
tags:
  - name: WebServices
    description: List of endpoints for register and consult of the orders status.
  - name: PDFServices
    description: PDF creator endpoints.
  - name: CSVEndpoints
    description: List of endpoints for CSV file processing methods
  - name: PDFAtariServices
    description: PDF creator endpoints.
paths:
  "/fnTrackOrderChazkiPosition":
    get:
      tags:
        - WebServices
      description:
        This API allows us to see all the Chazki movements and the delivery
        state.
      operationId: fnTrackOrderChazkiPosition
      parameters:
        - "$ref": '#/components/parameters/queryCode'
        - "$ref": '#/components/parameters/queryEnterpriseKey'
      responses:
        "200":
          description: Successfully response object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: number
                    example: 1
                  position:
                    type: object
                    properties:
                      latitude:
                        type: number
                        example: -12.046502
                      longitude:
                        type: number
                        example: -77.042716
                  status:
                    type: number
                    example: ASSIGNED
                  timestamp:
                    type: string
                    example: "2020-04-30T00:00:00.000Z"
                  rd:
                    type: string
                    example: Nombre repartidor
        "400":
          description: Query response with errors.
          content:
            application/json:
              schema:
                type: object
                "$ref": "#/components/schemas/FailFnResponse"
        "201": 
          - "$ref": '#/components/requestBodies/errorResponse400'
        "202":
          description: Query response with errors.
          content:
            application/json:
              schema:
                type: object
                "$ref": "#/components/requestBodies/errorResponse400"
  "/fnOrderHistorialPublic":
    get:
      tags:
        - WebServices
      description:
        This API allows us to see all the states the delivery passed group
        by services.The services group reference the number of attempts made to deliver
        the delivery.
      operationId: fnOrderHistorialPublic
      parameters:
        - "$ref": '#/components/parameters/queryCode'
        - "$ref": '#/components/parameters/queryEnterpriseKey'
      responses:
        "200":
          description: Successfully response object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: number
                    example: 1
                  descriptionResponse:
                    type: string
                    example: SUCCESS
                  message:
                    type: string
                    example: ""
                  service:
                    type: array
                    items:
                      type: object
                      "$ref": "#/components/schemas/Service"
        "400":
          description: Query response with errors.
          content:
            application/json:
              schema:
                type: object
                "$ref": "#/components/schemas/FailFnResponse"
  "/fnOrderHistorialPrivate":
    get:
      tags:
        - WebServices
      description:
        This API allows us to see all the states the delivery passed through.The
        number of the attempt made to deliver the delivery is shown in each change
        of status.
      operationId: fnOrderHistorialPrivate
      parameters:
        - "$ref": '#/components/parameters/queryCode'
        - "$ref": '#/components/parameters/queryEnterpriseKey'
      responses:
        "200":
          description: Successfully response object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: number
                    example: 1
                  descriptionResponse:
                    type: string
                    example: SUCCESS
                  message:
                    type: string
                    example: ""
                  service:
                    type: array
                    items:
                      type: object
                      "$ref": "#/components/schemas/Service"
        "400":
          description: Query response with errors.
          content:
            application/json:
              schema:
                type: object
                "$ref": "#/components/schemas/FailFnResponse"
  "/fnOrderImages":
    get:
      tags:
        - WebServices
      description:
        This API allow us to see the pictures taken by the chazki at the
        delivery momment.
      operationId: fnOrderImages
      parameters:
        - "$ref": '#/components/parameters/queryCode'
        - "$ref": '#/components/parameters/queryEnterpriseKey'
      responses:
        "200":
          description: Successfully response object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: number
                    example: 1
                  deliveryResponse:
                    type: string
                    example: SUCCESS
                  orderImages:
                    type: array
                    items:
                      type: string
                      example: iVBORw0KGgoAAAANSUhEUgAAAl8AAAQ4CAIAAAC4
        "400":
          description: Query response with errors.
          content:
            application/json:
              schema:
                type: object
                "$ref": "#/components/schemas/FailfnOrderImages"
  "/uploadClientOrders":
    post:
      tags:
        - WebServices
      description:
        "This endpoint allows to register a delivery. Since the data can
        be grouped into an array, multiple deliveries can be registered.Note: The
        objects structure in the 'orders' array is the same as the one provided
        in the schema for CSV loading. The following list of parameters may have more
        or fewer fields. In any case, use the fields from the CSV scheme."
      operationId: uploadClientOrders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Orders"
      responses:
        "200":
          description: Successfully response object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  ordersWithErrors:
                    type: number
                    example: 0
                  ordersWithoutErrors:
                    type: number
                    example: 1
  "/uploadOriginalOrdersFromIntegration":
    post:
      tags:
        - WebServices
      description:
        Este endpoint permite registrar un originalOrder from Integration.
        Dado que en el los datos se puegen agrupar en un arreglo, se pueden registrar
        varios originalOrder
      operationId: uploadOriginalOrdersFromIntegration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/uploadOriginalOrdersFromIntegration"
      responses:
        "200":
          description: Successfully response object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  ordersWithErrors:
                    type: number
                    example: 0
                  ordersWithoutErrors:
                    type: number
                    example: 1
  "/cancelOrderForIntegration":
    post:
      tags:
        - WebServices
      description:
        The endpoint allows to cancel an order by integration. 
        As long as the order is not in a completed state
      operationId: cancelOrderForIntegration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/cancelOrderForIntegration"
      responses:
        "200":
          description: Successfully response object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Cancelled Order"
  "/orderStatusUpdateFun":
    post:
      tags:
        - WebServices
      description: This API allows us to UPDATE the Order status.
      operationId: orderStatusUpdateFun
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/orderStatusUpdateFun"
      responses:
        "200":
          description: Response object with ordersWithErrors, ordersWithoutErrors.
  "/createPDFByCSV":
    post:
      tags:
        - PDFServices
      description:
        This endpoint allows to create a PDF from a CSV file. The file
        to be generated is in PDF extension.
      operationId: createPDFByCSV
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/createPDFByCSV"
      responses:
        "200":
          description: Object with the PDF URL address.
  "/createPDFByOrders":
    post:
      tags:
        - PDFServices
      description:
        This endpoint allows to generate tickets using the standar Chazki
        format.The file to be generated is in PDF extension.
      operationId: createPDFByOrders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/createPDFByOrders"
      responses:
        "200":
          description: Successfully response object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  file:
                    type: string
                    example: https://storage.googleapis.com/download/storage/v1/b/xxxxxxxxxxxxx/yyyyyyy
  "/createPDFByRoute":
    post:
      tags:
        - PDFServices
      description:
        This endpoint allows to create PDF From a route. The file to be
        generated is in PDF extension.
      operationId: createPDFByRoute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                routeID:
                  type: string
                  description: Unique authorization code that identifies the customer.
      responses:
        "200":
          description: Object with the PDF URL address.
  "/createPDFbyLocations":
    post:
      tags:
        - PDFServices
      description:
        This endpoint allows to create PDF From locations. The file to
        be generated is in PDF extension.
      operationId: createPDFbyLocations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                locationBranchIDs:
                  type: string
                  description: The Location Branch Identificator
                filters:
                  type: array
                  items:
                    type: object
                    properties:
                      wareHouseID:
                        type: string
                        description: warehouse Identificator
                      slot:
                        type: string
                      level:
                        type: string
                      position:
                        type: string
      responses:
        "200":
          description: Object with the PDF URL address.
  "/createPDFAcuseOrder":
    post:
      tags:
        - PDFServices
      description:
        This endpoint allows to create PDF From Acuse Order. The file to
        be generated is in PDF extension.
      operationId: createPDFAcuseOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage.
                filenameUrl:
                  type: string
                  description: Position on the storage.
      responses:
        "200":
          description: Object ordersData with orderID and urlFile .
  "/processCSV":
    post:
      tags:
        - CSVEndpoints
      description: This endpoint allows to process a CSV.
      operationId: processCSV
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enterpriseID:
                  type: number
                  example: 2763
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage
                  example: csv/2021-06-02T14-24-33-038Z.csv
                filenameUrl:
                  type: string
                  example: https://firebasestorage.googleapis.com/v0/b/chazki-link-dev.appspot.com/o/csv%2F2021-06-02T14-24-33-038Z.csv
                  description: Position on the storage
                userID:
                  type: string
                  example: 6dc84cb7-305c-48a2-9076-6e3deb3d2c44
      responses:
        "200":
          description:
            Response Object with the validatedOrderIDs and number of Failed
            Orders
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/processCSV"
  "/validateCSVErrors":
    post:
      tags:
        - CSVEndpoints
      description: This endpoint allows to make a CSV Errors validations.
      operationId: validateCSVErrors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enterpriseID:
                  type: number
                  example: 2763
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage
                  example: csv/2021-06-02T14-24-33-038Z.csv
                filenameUrl:
                  type: string
                  example: https://firebasestorage.googleapis.com/v0/b/chazki-link-dev.appspot.com/o/csv%2F2021-06-02T14-24-33-038Z.csv
                  description: Position on the storage
                originalOrderID:
                  type: string
                  example: "42903"
                  description: For only one by one check of Trackcodes
      responses:
        "200":
          description: Status response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
  "/sendEmailWithErrors":
    post:
      tags:
        - CSVEndpoints
      description: This endpoint allows to send email with errors
      operationId: sendEmailWithErrors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                originalOrderIDs:
                  type: string
                  description: It's the name that was saved into the Firebase Storage
                emails:
                  type: array
                  description: Array of emails
                  items:
                    type: string
                  example:
                    - chazki@chazki.com
      responses:
        "200":
          description: Status response.
        "400":
          description:
            If the csv file does not exist into the Firebase Storage or
            the token was invalid.
  "/createLocationBranch":
    post:
      tags:
        - CSVEndpoints
      description: This endpoint allows to create a Location Branch
      operationId: createLocationBranch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage.
                filenameUrl:
                  type: string
                  description: Position on the storage
      responses:
        "200":
          description:
            Response Object with validatedOrderIDs and errors array if
            exist.
        "400":
          description:
            If the csv file does not exist into the Firebase Storage or
            the token was invalid.
  "/updateLocationStock":
    post:
      tags:
        - CSVEndpoints
      description: This endpoint allows to update the Location of Stock in Orders
      operationId: updateLocationStock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage.
                filenameUrl:
                  type: string
                  description: Position on the storage
      responses:
        "200":
          description: Response Object with ordersUpdated and errors array if exist.
        "400":
          description:
            If the csv file does not exist into the Firebase Storage or
            the token was invalid.
  "/updatePackage":
    post:
      tags:
        - CSVEndpoints
      description: This endpoint allows to update a Package
      operationId: updatePackage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage.
                filenameUrl:
                  type: string
                  description: Position on the storage
                enterpriseID:
                  type: string
                  description: Enterprise identificator
      responses:
        "200":
          description:
            Response Object with validatedOrderIDs and errors array if
            exist.
        "400":
          description:
            If the csv file does not exist into the Firebase Storage or
            the token was invalid.
  "/createAffiliates":
    post:
      tags:
        - CSVEndpoints
      description: This endpoint allows to create Affiliates
      operationId: createAffiliates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage.
                filenameUrl:
                  type: string
                  description: Position on the storage
                userID:
                  type: string
                  description: User identificator
                cityID:
                  type: string
                  description: City identificator
      responses:
        "200":
          description:
            Response Object with the number of Failed and Successed Users
            created. It also throws an errors array if exist.
        "400":
          description:
            If the csv file does not exist into the Firebase Storage or
            the token was invalid.
  "/createStaffingAffiliates":
    post:
      tags:
        - CSVEndpoints
      description: This endpoint allows to create Staffing Affiliates
      operationId: createStaffingAffiliates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage.
                filenameUrl:
                  type: string
                  description: Position on the storage
                type:
                  type: string
                  description: type of Staffing
      responses:
        "200":
          description: Response Object with noFailedStaffing, errors and validatedNewStaffingIDs.
        "400":
          description:
            If the csv file does not exist into the Firebase Storage or
            the token was invalid.
  "/CSVreportGenerator":
    post:
      tags:
        - CSVEndpoints
      description: This endpoint allows to Generate a CSV Report
      operationId: CSVreportGenerator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/liquidationReport"
      responses:
        "200":
          description: Response Object with contents and errors attributes.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CSVreportGenerator"
        "400":
          description:
            If the csv file does not exist into the Firebase Storage or
            the token was invalid.
  "/createAsignedStaffing":
    post:
      tags:
        - CSVEndpoints
      description: This endpoint allows to create Staffing Affiliates
      operationId: createAsignedStaffing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enterpriseID:
                  type: string
                  description: Enterprise identificator.
                branchOfficeID:
                  type: string
                  description: Branch Office identificator
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage.
      responses:
        "200":
          description: Response Object with contents and errors attributes.
        "400":
          description:
            If the csv file does not exist into the Firebase Storage or
            the token was invalid.
  "/CSVtemplateOrdersNoLocated":
    post:
      tags:
        - CSVEndpoints
      description: This endpoint allows to get a template with Orders No Located
      operationId: CSVtemplateOrdersNoLocated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage.
                filenameUrl:
                  type: string
                  description: Position on the storage
                enterpriseID:
                  type: string
                  description: It's the enterprise identificator as a known code.
                ordersIDs:
                  type: string
                  description:
                    send only if you don't have a filename, filenameUrl
                    csv
                filters:
                  type: array
                  description: Object that contains filters to find Orders No located
                  items:
                    type: object
                    properties:
                      enterpriseID:
                        type: array
                        required: false
                        items:
                          type: string
                      trackCode:
                        type: array
                        required: false
                        items:
                          type: string
                      cityID:
                        type: array
                        required: false
                        items:
                          type: string
                      rangeDate:
                        type: array
                        required: false
                        items:
                          type: string
      responses:
        "200":
          description: Response Object with an urlTemplate and status response.
        "400":
          description:
            If the csv file does not exist into the Firebase Storage or
            the token was invalid.
  "/CSVprocessOrdersNoLocated":
    post:
      tags:
        - CSVEndpoints
      description: This endpoint allows to process CSV with Orders No Located
      operationId: CSVprocessOrdersNoLocated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage.
                filenameUrl:
                  type: string
                  description: Position on the storage
                enterpriseID:
                  type: string
                  description: It's the enterprise identificator as a known code.
                ordersIDs:
                  type: string
                  description:
                    send only if you don't have a filename, filenameUrl
                    csv
                filters:
                  type: array
                  description: Object that contains filters to find Orders No located
                  items:
                    type: object
                    properties:
                      enterpriseID:
                        type: array
                        required: false
                        items:
                          type: string
                      trackCode:
                        type: array
                        required: false
                        items:
                          type: string
                      cityID:
                        type: array
                        required: false
                        items:
                          type: string
                      rangeDate:
                        type: array
                        required: false
                        items:
                          type: string
      responses:
        "200":
          description:
            Response - Response Object with an array that contains ordersCreatedID
            and number of Failed Orders.
        "400":
          description:
            If the csv file does not exist into the Firebase Storage or
            if the enterpriseID does not exit in Database.
  "/updateDropAddressInFallabellaReturnOrders":
    post:
      tags:
        - CSVEndpoints
      description:
        "This endpoint allows to update Drop Addresses in Return Orders
        from Falabella Enterprise.Data must be sent in POST protocol and in the body
        request format in JSON. The csv file must had been saved with an extra column
        as 'CODIGO ALMACEN' so the BranchCode. "
      operationId: updateDropAddressInFallabellaReturnOrders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage.
                  example: csv/2021-11-24T18-35-32-846Zreturn_orders_falabella.csv
                filenameUrl:
                  type: string
                  description: Position on the storage
                  example: csv/2021-11-24T18-35-32-846Zreturn_orders_falabella.csv
      responses:
        "200":
          description:
            Response Object with an array with validatedOrderTrackCodes
            and the number of the ordersUpdated.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/updateDropAddressInFallabellaReturnOrders"
        "400":
          description: If the csv file does not exist into the Firebase Storage.
  "/CSVManifestValidation":
    post:
      tags:
        - CSVEndpoints
      description: This endpoint allows to make a CSV Manifest Validation
      operationId: CSVManifestValidation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage.
                  example: csv/2021-11-24T18-35-32-846Zreturn_orders_falabella.csv
                filenameUrl:
                  type: string
                  description: Position on the storage
                  example: csv/2021-11-24T18-35-32-846Zreturn_orders_falabella.csv
                enterpriseID:
                  type: string
                  description: Enterprise identificator
      responses:
        "200":
          description:
            Response Object with an array with a counter of existing and
            missing Track codes. If exist missing trackCodes it gets an urlFileMissingTrackcodes.
        "400":
          description:
            If the csv file does not exist into the Firebase Storage or
            if the enterpriseID does not exit in Database
  "/createAtariPDFFromCSV":
    post:
      tags:
        - PDFAtariServices
      description: This endpoint allows to create PDF From CSV file
      operationId: createAtariPDFFromCSV
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: It's the name that was saved into the Firebase Storage.
                  example: csv/2021-11-24T18-35-32-846Zreturn_orders_falabella.csv
                filenameUrl:
                  type: string
                  description: Position on the storage
                  example: csv/2021-11-24T18-35-32-846Zreturn_orders_falabella.csv
      responses:
        "200":
          description: Object with the PDF URL address.
        "400":
          description: If the filename does not exist in storage
components:
  schemas:
    Orders:
      type: object
      properties:
        enterpriseKey:
          type: string
          description: | 
            Company identifier, it is a hash generated by Chazki to identify the company, 
            it is obtained once the company has been generated within Chazki by the commercial area.
          example: 1fb07e7c-eca2-45c1-b743-16130ff3212e
        orders:
          type: array
          items:
            type: object
            properties:
              trackCode:
                type: string
                description: |
                  Order code or tracking code, with this code you can track the order.
                example: ABCDEFI
              paymentMethodID:
                type: string
                description: | 
                  Order payment method, It can take the next values :

                  | PaymentMethod | Description  |
                  | ------------- | ------------ |
                  | COD | d |
                  | PAGADO | The order is paid and only the products are delivered. |
                  | CCOD | d |
                  | PAY | d |
                example: PAGADO
              paymentProofID:
                type: string
                description: |
                  Payment document, It can take the next values :

                  | paymentProof | Description  |
                  | ------------- | ------------ |
                  | BOLETA | Proof of payment assigned to the order. |
                  | FACTURA | Proof of payment assigned to the order. |
                  | GUIA | Document used to support the transfer. |
                example: BOLETA
              serviceID:
                type: string
                description: |
                  Code of the delivery service type will be carried out. 
                  It can take the following values :

                  | Service (All the countries) | Description |
                  | ------------- | ------------ |
                  | EXPRESS | The order will be shipped the same day. |
                  | NEXT DAY | The order will be shipped the next day. |
                  | SAME DAY | |

                  Special services by country:

                  | Service (Argentina) | Description  |
                  | ------------- | ------------ |
                  | REGULAR_ARG | d |
                  | SAME DAY | d |
                  | SCHEDULED_ARG | s |

                  | Service (Chile) | Description  |
                  | ------------- | ------------ |
                  | CONSOLIDADO | d. |
                  | IDA Y VUELTA | d |

                  | Service (Mexico) | Description  |
                  | ------------- | ------------ |
                  | DIA SIGUIENTE | d |
                  | ECONOMICO | d |
                  | MISMO DIA | d |
                  | REGULAR | d |
                example: SAME DAY
              packageEnvelope:
                type: string
                description: Short description of the type of package wrapper.
                example: Caja
              packageWeight:
                type: integer
                description: |
                  Package weight, if the detail of the packages is sent, 
                  then it is the sum of them in the same unit.
                example: 1
              packageSizeID:
                type: string
                description: |
                  Unit of measure of the order, it can take the following values: (the dimensions are agreed with the commercial area).

                  |   Argentina   |     Chile     |    Colombia   |     Mexico    |      Perú     |
                  | ------------- | ------------- | ------------- | ------------- | ------------- |
                  | XS_ARG | XS    | SOBRE       | XS    | XS    |
                  | S_ARG  | S     | CAJA5KG     | S     | S     |
                  | M_ARG  | SOBRE | CAJA15-10KG | SOBRE | SOBRE |
                  | L_ARG  | M     | CAJA20KG    | M     | M     |
                  | XL_ARG | L     | CAJA25KG    | L     | L     |
                  |        | XL    | CAJA30KG    | XL    | XL    |
                  |        | XXL   |             | XXL   | XXL   |
                  |        | JUMBO |             | JUMBO | JUMBO |
                example: XL
              packageQuantity:
                type: number
                description: |
                  Quantity of order packages, if the detail of the packages is sent, 
                  then the sum of the detail quantities must be entered.
                example: 1
              productDescription:
                type: string
                description: Description of products or brief description of the set of packages.
                example: xxxxxxxxxxxxxxx
              productPrice:
                type: number
                description: |
                  Approximate price of the product, if the detail of the packages is sent, 
                  then it is the sum of the total of each item.
                example: 0
              reverseLogistic:
                type: string
                description: |
                  Reverse logic indicator, allows us to carry out reverse logistics in 
                  case it is necessary to collect orders returned by the customer. 
                  It can take the following values 'YES' or 'NO'
                example: "NO"
              crossdocking:
                type: string
                description: |
                  Field that indicates if the order is cross-docking, the cross-docking 
                  service carries out the entry of the product to our warehouse for 
                  distribution. It can take the following values "YES" or "NO".
                example: "NO"
              pickUpBranchID:
                type: string
                description: |
                  Warehouse code where the packages are collected, 
                  to obtain the warehouse code you must register the branch in our system.
                example: ""
              pickUpAddress:
                type: string
                description: Address of the client or address of collection of the products.
                example: XXXXXXXXXXXXXXXXXXXXXXXXX
              pickUpPostalCode:
                type: string
                description: Postal code of the address where the products are picked up.
                example: "000000"
              pickUpAddressReference:
                type: string
                description: References of customer addresses or collection of products.
                example: "-"
              pickUpPrimaryReference:
                type: string
                description: District of address of the client or collection of products.
                example: Distrito
              pickUpSecondaryReference:
                type: string
                description: Province of address of the client or collection of products.
                example: Departamento
              pickUpNotes:
                type: string
                description: Additional data that facilitate the collection of products.
                example: ""
              pickUpContactName:
                type: string
                description: Contact Names for the recollection.
                example: xxxxx yyyyy
              pickUpContactPhone:
                type: string
                description: Contact phone number for the recollection.
                example: "12345678"
              pickUpContactDocumentTypeID:
                type: string
                description: |
                  Contact document type for the recollection. It can take
                  the next values:

                  | Document Type | Description  |
                  | ------------- | ------------ |
                  | CE  | Immigration Card |
                  | CR  | Refuge Card |
                  | DNI | National identity document |
                  | NIT | Tax identification number |
                  | PAS | Passport |
                  | PTP | Temporary Permanence Permit |
                  | RFC | Federal taxpayer registration |
                  | RUC | Single Taxpayer Registry |
                  | RUT | Unique Roll Tributary |
                example: RUC
              pickUpContactDocumentNumber:
                type: string
                description: Contact ID for the recollection.
                example: "12345678"
              pickUpContactEmail:
                type: string
                description: Email for recollection notification.
                example: xxxxxx@yyyyy.zzz
              dropBranchID:
                type: string
                description: |
                  Delivery warehouse code, to obtain the warehouse 
                  code you must register the branch in our system.
                example: ""
              dropAddress:
                type: string
                description: Delivery address of the end customer or delivery address of the products.
                example: Direccion
              dropPostalCode:
                type: string
                description: Postal code of the delivery address.
                example: "000000"
              dropAddressReference:
                type: string
                description: References for delivery address.
                example: Referencia
              dropPrimaryReference:
                type: string
                description: Final client address's district.
                example: Distrito
              dropSecondaryReference:
                type: string
                description: Final client address's province.
                example: Departamento
              dropNotes:
                type: string
                description: Additional data that facilitate the delivery of products.
                example: Notas
              dropContactName:
                type: string
                description: Person's contact names for delivery.
                example: CONTACTO
              dropContactPhone:
                type: string
                description: Person's phone number for delivery
                example: "12345678 "
              dropContactDocumentTypeID:
                type: string
                description: |
                  Person's document type for delivery. It can take the
                  next values: 

                  | Document Type | Description  |
                  | ------------- | ------------ |
                  | CE  | Immigration Card |
                  | CR  | Refuge Card |
                  | DNI | National identity document |
                  | NIT | Tax identification number |
                  | PAS | Passport |
                  | PTP | Temporary Permanence Permit |
                  | RFC | Federal taxpayer registration |
                  | RUC | Single Taxpayer Registry |
                  | RUT | Unique Roll Tributary |
                example: DNI
              dropContactDocumentNumber:
                type: string
                description: Person's ID document for delivery.
                example: "12345678"
              dropContactEmail:
                type: string
                description: Delivery notification Email.
                example: xxxxxx@yyyyy.zzz
              pickUpPoint:
                type: array
                description:
                  Coordinates array of picking address. Must have at least
                  two elements (longitude and latitude.)
                items:
                  type: number
                example:
                  - -99.17644241
                  - 19.509946148
              dropPoint:
                type: array
                description:
                  Coordinates array of delivery address. Must have at least
                  two elements (longitude and latitude)
                items:
                  type: number
                example:
                  - -99.17644241
                  - 19.509946148
              shipmentPrice:
                type: number
                description: 
                  Shipping Price Amount
                example:
                  0.0
              pickUpLandMark:
                type: string
                description:
                  Brief description of the store inside the warehouse or branch.
                example:
                  "Tienda ABCD #0000"
              packages:
                type: array
                items:
                  "$ref": "#/components/schemas/Packages"

    cancelOrderForIntegration:
      type: object
      properties:
        enterpriseKey:
          type: string
          description: Enterprise Identificator
          example: 1fb07e7c-eca2-45c1-b743-16130ff3212e
        trackCode:
          type: string
          description: Order code
          example: ABCDEFI
    uploadOriginalOrdersFromIntegration:
      type: object
      properties:
        enterpriseKey:
          type: string
          description: Enterprise Identificator
          example: 1fb07e7c-eca2-45c1-b743-16130ff3212e
        orders:
          type: array
          items:
            type: object
            properties:
              trackCode:
                type: string
                description: Order code
                example: ABCDEFI
              paymentMethodID:
                type: string
                description:
                  Order payment method, It can take the next values COD,
                  PAGADO, CCOD, PAY.
                example: PAGADO
              paymentProofID:
                type: string
                description:
                  Payment document, It can take the next values BOLETA,
                  GUIA and FACTURA.
                example: BOLETA
              serviceID:
                type: string
                description:
                  Service code. It can take the next values "REGULAR",
                  "EXPRESS" or "PROGRAMMED", depending on the desired service type.
                example: REGULAR
              packageEnvelope:
                type: string
                description: Package wrap type.
                example: Caja
              packageWeight:
                type: integer
                description: Package weight.
                example: 1
              packageSizeID:
                type: string
                description: Order measure unit (XS, S, M, L).
                example: XL
              packageQuantity:
                type: number
                description: Order packages Quantity.
                example: 1
              productDescription:
                type: string
                description: Products description.
                example: xxxxxxxxxxxxxxx
              productPrice:
                type: number
                description: Approximate product price.
                example: 0
              reverseLogistic:
                type: string
                description: It can take the next values 'YES' or 'NO'
                example: "NO"
              crossdocking:
                type: string
                description:
                  Field indicating if the order is crossdocking. It can
                  take the next values "YES" or "NO".
                example: "NO"
              pickUpBranchID:
                type: string
                description: Warehouse code where the packages are collected.
                example: ""
              pickUpAddress:
                type: string
                description: Client address.
                example: XXXXXXXXXXXXXXXXXXXXXXXXX
              pickUpPostalCode:
                type: string
                description: Recolection address postal code.
                example: "000000"
              pickUpAddressReference:
                type: string
                description: Client address references.
                example: "-"
              pickUpPrimaryReference:
                type: string
                description: Client address district.
                example: Distrito
              pickUpSecondaryReference:
                type: string
                description: Client address province.
                example: Departamento
              pickUpNotes:
                type: string
                description: Package recollection notes.
                example: ""
              pickUpContactName:
                type: string
                description: Contact Names for the recollection.
                example: xxxxx yyyyy
              pickUpContactPhone:
                type: string
                description: Contact phone number for the recollection.
                example: "12345678"
              pickUpContactDocumentTypeID:
                type: string
                description:
                  Contact document type for the recollection. It can take
                  the next values "DNI", "PAS", "PTP", "CR" and "CE".
                example: RUC
              pickUpContactDocumentNumber:
                type: string
                description: Contact ID for the recollection.
                example: "12345678"
              pickUpContactEmail:
                type: string
                description: Email for recollection notification.
                example: xxxxxx@yyyyy.zzz
              dropBranchID:
                type: string
                description: Delivery warehouse code.
                example: ""
              dropAddress:
                type: string
                description: Final client delivery address.
                example: Direccion
              dropPostalCode:
                type: string
                description: Recollection address's postal code.
                example: "000000"
              dropAddressReference:
                type: string
                description: Final client address's references.
                example: Referencia
              dropPrimaryReference:
                type: string
                description: Final client address's district.
                example: Distrito
              dropSecondaryReference:
                type: string
                description: Final client address's province.
                example: Departamento
              dropNotes:
                type: string
                description: Package delivery notes.
                example: Notas
              dropContactName:
                type: string
                description: Person's contact names for delivery.
                example: CONTACTO
              dropContactPhone:
                type: string
                description: Person's phone number for delivery
                example: "12345678 "
              dropContactDocumentTypeID:
                type: string
                description:
                  Person's document type for delivery. It can take the
                  next values "DNI", "PAS", "PTP","CR" and "CE".
                example: DNI
              dropContactDocumentNumber:
                type: string
                description: Person's ID document for delivery.
                example: "12345678"
              dropContactEmail:
                type: string
                description: Delivery notification Email.
                example: xxxxxx@yyyyy.zzz
              pickUpPoint:
                type: array
                description:
                  Coordinates array of picking address. Must have at least
                  two elements (longitude and latitude.)
                items:
                  type: number
                example:
                  - -99.17644241
                  - 19.509946148
              dropPoint:
                type: array
                description:
                  Coordinates array of delivery address. Must have at least
                  two elements (longitude and latitude)
                items:
                  type: number
                example:
                  - -99.17644241
                  - 19.509946148
    orderStatusUpdateFun:
      type: object
      properties:
        enterpriseKey:
          type: string
          description: Enterprise Key.
          required: true
        trackCode:
          type: string
          description: Trackcode
          required: true
        statusClient:
          type: string
          description: Status client.
          required: true
        statusID:
          type: string
          description: Order status.
          required: true
        incidenceID:
          type: string
          description: Order status Incidence
          required: true
        typeUserID:
          type: string
          description: Type user driver
          required: true
        email:
          type: string
          description: Client's email
          required: true
        commentary:
          type: string
          description: Order commentaries
          required: true
        orderImage:
          type: string
          description: URL orderImage
          required: true
        receptorAcuse:
          type: string
          description: The person who receive the package
          required: true
        relationShipAcuse:
          type: string
          description: Relationship with the client
          required: true
        rutAcuse:
          type: string
          description: Receptor's RUT
          required: true
    createPDFByCSV:
      type: object
      properties:
        filename:
          type: string
          description: It's the name that was saved into the Firebase Storage.
          required: true
        filenameUrl:
          type: string
          description: Position on the storage.
          required: true
    createPDFByOrders:
      type: object
      properties:
        enterpriseKey:
          type: string
          description: Unique authorization code that identifies the customer.
          required: true
        filters:
          type: array
          description: Object with filters to generate tickets in PDF format.
          items:
            type: string
          example:
            - XXXXXXXX
            - YYYYYYYYYY
    Packages:
      type: object
      properties:
        ClientPackageID:
          type: string
          description: Package code.
          example: "68473029"
        envelope:
          type: string
          description: Package envelop type.
          example: Caja
        weight:
          type: number
          description: Package weight.
          example: 10
        weightUnit:
          type: string
          description: Weight unit.
          example: kg
        size:
          type: number
          description: Package size.
          example: M
        quantity:
          type: number
          description: Number of packages.
          example: 1
        name:
          type: string
          description: Package description.
          example: HELADO OREO MICHA
        currency:
          type: string
          description: Currency type.
          example: MXN
        unitaryProductPrice:
          type: number
          description: Unitary package price.
          example: "38.5"
    Service:
      type: object
      properties:
        status:
          type: string
          example: NEW
        date:
          type: string
          example: "2020-04-30T00:00:00.000Z"
        reason:
          type: string
          example: ""
    FailFnResponse:
      type: object
      properties:
        response:
          type: number
          example: 0
        descriptionResponse:
          type: string
          example: El trackcode no existe o el enterpriseKey no es correcto
        message:
          type: string
          example: ""
    FailfnOrderImages:
      type: object
      properties:
        response:
          type: number
          example: 0
        deliveryResponse:
          type: string
          example: No se encuentra el trackCode o el codigo de empresa
    processCSV:
      type: object
      properties:
        sucess:
          type: boolean
          example: true
        validateOrderIDs:
          type: array
          items:
            type: string
            example: ""
        noFailedOrders:
          type: number
          example: 0
    CSVreportGenerator:
      type: object
      properties:
        idReport:
          type: string
          example: liquidationReport
        argsQuery:
          type: object
          properties:
            startDate:
              type: string
              example: "2020-11-01"
            endDate:
              type: string
              example: "2020-11-20"
            enterprisesIDs:
              type: array
              items:
                type: number
                example: 1
            servicesIDs:
              type: array
              items:
                type: number
                example: 2
            statesIDsOrders:
              type: array
              items:
                type: number
                example: 176
            liquidationStatesIDs:
              type: array
              items:
                type: number
                example: 201
        emailSendInfo:
          type: object
          properties:
            emails:
              type: array
              items:
                type: string
                example: anthony@chazki.com
            subject:
              type: string
              example: Reporte de Liquidaciones
    updateDropAddressInFallabellaReturnOrders:
      type: object
      properties:
        success:
          type: boolean
          example: true
        errors:
          type: array
          items:
            type: string
            example: " "
        validatedOrderTrackCodes:
          type: number
          example: 0
        ordersUpdated:
          type: number
          example: 1
    liquidationReport:
      type: object
      properties:
        idReport:
          type: string
          description: Type of report.
          example:
            - liquidationReport
            - affiliatesReport
            - serviceReport
        argsQuery:
          type: object
          properties:
            startDate:
              type: string
              example: "2020-11-01"
            endDate:
              type: string
              example: "2020-11-20"
        type:
          type: string
          description: type of Staffing
    affiliatesReport:
      type: object
      properties:
        idReporat:
          type: string
          description: Type of report.
          example:
            - liquidationReport
            - affiliatesReport
            - serviceReport
        argsQuery:
          type: object
          properties:
            startDate:
              type: string
              example: "2020-11-01"
            endDate:
              type: string
              example: "2020-11-20"
        type:
          type: string
          description: type of Staffing
  requestBodies:
    uploadClientOrders:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Orders"
      required: true
    errorResponse400:
      description: Query response with errors.
      content:
        application/json:
          schema:
            type: object
            "$ref": "#/components/schemas/FailFnResponse"
  parameters:
    queryCode:
      name: code
      in: query
      description: Delivery track code.
      required: true
      style: form
      explode: false
      schema:
        type: string
    queryEnterpriseKey:
      name: enterpriseKey
      in: query
      description: |
        Company identifier, it is a hash generated by Chazki to 
        identify the company, it is obtained once the company has 
        been generated within Chazki by the commercial area.
      required: true
      style: form
      explode: false
      schema:
        type: string
  securitySchemes:
    enterpriseKey:
      name: enterpriseKey
      type: apiKey
      in: query
      description: Access key for api.
